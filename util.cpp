/*----------------------------------------------------------------
Copyright (c) 2014 Author: Jagadeesh Vasudevamurthy
Filename: util.cpp
-----------------------------------------------------------------*/
#include "util.h"

/*--------------------------------------------------------
strcmp
----------------------------------------------------------*/
int Strcmp(const char* s1, const char* s2){
  for (; *s1 == *s2; ++s1, ++s2)
  if (*s1 == 0) {
    return 0;
  }
  return *(unsigned char *)s1 < *(unsigned char *)s2 ? -1 : 1;
}

/*--------------------------------------------------------
strcpy
----------------------------------------------------------*/
void Strcpy(char* s1, const char* s2){
  int i = 0;
  while (1) {
    s1[i] = s2[i];
    if (s2[i] == '\0') {
      return;
    }
    i++;
  }
}

/*----------------------------------------------------------------
Print an integer
-----------------------------------------------------------------*/
void print_integer(const int& x){
  cout << x << " ";
}

/*----------------------------------------------------------------
Print an integer
-----------------------------------------------------------------*/
void print_integer(const int*& x){
  cout << *x << " ";
}

/*----------------------------------------------------------------
Print an integer
-----------------------------------------------------------------*/
void print_integer(int& x){
  cout << x << " ";
}

/*----------------------------------------------------------------
Print an integer
-----------------------------------------------------------------*/
void print_integer(int*& x){
  cout << *x << " ";
}

/*----------------------------------------------------------------
7 9 1
9 7 -1
-----------------------------------------------------------------*/
int int_ascending_order(const int& c1, const int& c2){
  if (c1 == c2) {
    return 0;
  }
  if (c1 < c2) {
    return 1;
  }
  return -1;
}

/*----------------------------------------------------------------
pointer
-----------------------------------------------------------------*/
int int_ascending_order(int* const& c1, int* const& c2){
  return int_ascending_order(*c1, *c2);
}

/*----------------------------------------------------------------
7 9 -1
9 7  1
-----------------------------------------------------------------*/
int int_descending_order(const int& c1, const int& c2){
  int x = int_ascending_order(c1, c2);
  return -x;
}

/*----------------------------------------------------------------
pointer
-----------------------------------------------------------------*/
int int_descending_order(int* const& c1, int* const& c2){
  return int_descending_order(*c1, *c2);
}

/*----------------------------------------------------------------
Delete a int object
-----------------------------------------------------------------*/
void delete_int(int*& c){
  delete(c);
}

/*----------------------------------------------------------------
Delete a char * object
-----------------------------------------------------------------*/
void delete_charstar(char*& c){
  delete[] c;
}

/*--------------------------------------------------------
char compare
----------------------------------------------------------*/
int charcompare(const char& c1, const char& c2){
  if (c1 == c2) {
    return 0;
  }
  if (c1 > c2) {
    return 1;
  }
  return -1;
}

/*--------------------------------------------------------
char print
----------------------------------------------------------*/
void print_char(char& c){
  cout << c << " ";
}

/*--------------------------------------------------------
string print
----------------------------------------------------------*/
void print_string(char*& c){
  cout << c << " ";
}

/*--------------------------------------------------------
Delete c which is allocated by new []
----------------------------------------------------------*/
void free_string(char*& c){
  delete[] c;
}

/*--------------------------------------------------------
henry  zoo  is in descending order:  -1
tom   idiot is in decending order:    1
----------------------------------------------------------*/
int string_descending_order(char* const& c1, char* const& c2){
  int x = strcmp(c1, c2);
  return x;
}

/*--------------------------------------------------------
henry  zoo  is in ascending order:  -1   1
tom   idiot is in ascending order:   1  -1
----------------------------------------------------------*/
int string_ascending_order(char* const& c1, char* const& c2){
  int x = string_descending_order(c1, c2);
  return -x;
}

